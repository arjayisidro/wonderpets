{"ast":null,"code":"import axios from 'axios';\nimport { dispatch } from '../../Store/Store';\nimport { setErrors } from '../../Components/Login/Models/Reducer';\nimport { LoginError } from '../../Components/Login/Models/Types';\nexport const loginUser = userData => {\n  axios.post('/api/users/sign-in', userData).then(res => {// const { token } = res.data;\n    // localStorage.setItem('jwtToken', token);\n    // setAuthToken(token);\n    // const decoded = jwt_decode(token);\n    // // Set current user\n    // dispatch(setCurrentUser(decoded));\n  }).catch(err => {\n    dispatch(setErrors(LoginError, err.response.data));\n  });\n};","map":{"version":3,"sources":["/Users/arjay/Documents/pet-link/client/src/API/Login/loginAuth.ts"],"names":["axios","dispatch","setErrors","LoginError","loginUser","userData","post","then","res","catch","err","response","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA,SAASC,UAAT,QAA2B,qCAA3B;AAOA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAA2B;AAClDL,EAAAA,KAAK,CACFM,IADH,CACQ,oBADR,EAC8BD,QAD9B,EAEGE,IAFH,CAESC,GAAD,IAAS,CACb;AACA;AACA;AACA;AACA;AACA;AACD,GATH,EAUGC,KAVH,CAUUC,GAAD,IAAS;AACdT,IAAAA,QAAQ,CAACC,SAAS,CAACC,UAAD,EAAaO,GAAG,CAACC,QAAJ,CAAaC,IAA1B,CAAV,CAAR;AACD,GAZH;AAaD,CAdM","sourcesContent":["import axios from 'axios';\nimport { RematchDispatch } from '@rematch/core';\nimport setAuthToken from '../../Utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { dispatch } from '../../Store/Store';\nimport { setErrors } from '../../Components/Login/Models/Reducer';\nimport { LoginError } from '../../Components/Login/Models/Types';\n\ninterface Credentials {\n  emailAddress: string;\n  password: string;\n}\n\nexport const loginUser = (userData: Credentials) => {\n  axios\n    .post('/api/users/sign-in', userData)\n    .then((res) => {\n      // const { token } = res.data;\n      // localStorage.setItem('jwtToken', token);\n      // setAuthToken(token);\n      // const decoded = jwt_decode(token);\n      // // Set current user\n      // dispatch(setCurrentUser(decoded));\n    })\n    .catch((err) => {\n      dispatch(setErrors(LoginError, err.response.data));\n    });\n};\n"]},"metadata":{},"sourceType":"module"}