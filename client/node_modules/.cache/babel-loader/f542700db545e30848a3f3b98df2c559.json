{"ast":null,"code":"import axios from 'axios';\nimport { dispatch } from '../../Store/GlobalStore';\nexport const loginUser = userData => {\n  axios.post('/api/users/sign-in', userData).then(res => {// const { token } = res.data;\n    // localStorage.setItem('jwtToken', token);\n    // setAuthToken(token);\n    // const decoded = jwt_decode(token);\n    // // Set current user\n    // dispatch(setCurrentUser(decoded));\n  }).catch(err => {\n    dispatch.loginStore.setErrors(err.response.data);\n  });\n};\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post('/api/users/register', userData).then(res => history.push('/registerSuccess')).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};","map":{"version":3,"sources":["/Users/arjay/Documents/pet-link/client/src/API/Login/loginAuth.ts"],"names":["axios","dispatch","loginUser","userData","post","then","res","catch","err","loginStore","setErrors","response","data","registerUser","history","push","type","GET_ERRORS","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAASC,QAAT,QAAyB,yBAAzB;AAaA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAA2B;AAClDH,EAAAA,KAAK,CACFI,IADH,CACQ,oBADR,EAC8BD,QAD9B,EAEGE,IAFH,CAESC,GAAD,IAAS,CACb;AACA;AACA;AACA;AACA;AACA;AACD,GATH,EAUGC,KAVH,CAUUC,GAAD,IAAS;AACdP,IAAAA,QAAQ,CAACQ,UAAT,CAAoBC,SAApB,CAA8BF,GAAG,CAACG,QAAJ,CAAaC,IAA3C;AACD,GAZH;AAaD,CAdM;AAgBP,OAAO,MAAMC,YAAY,GAAG,CAACV,QAAD,EAAWW,OAAX,KAAwBb,QAAD,IAAc;AAC/DD,EAAAA,KAAK,CACFI,IADH,CACQ,qBADR,EAC+BD,QAD/B,EAEGE,IAFH,CAESC,GAAD,IAASQ,OAAO,CAACC,IAAR,CAAa,kBAAb,CAFjB,EAGGR,KAHH,CAGUC,GAAD,IACLP,QAAQ,CAAC;AACPe,IAAAA,IAAI,EAAEC,UADC;AAEPC,IAAAA,OAAO,EAAEV,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAJZ;AASD,CAVM","sourcesContent":["import axios from 'axios';\nimport { RematchDispatch } from '@rematch/core';\nimport setAuthToken from '../../Utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { dispatch } from '../../Store/GlobalStore';\n\ninterface Credentials {\n  emailAddress: string;\n  password: string;\n}\n\ninterface Registration {\n  userName: string;\n  emailAddress: string;\n  password: string;\n}\n\nexport const loginUser = (userData: Credentials) => {\n  axios\n    .post('/api/users/sign-in', userData)\n    .then((res) => {\n      // const { token } = res.data;\n      // localStorage.setItem('jwtToken', token);\n      // setAuthToken(token);\n      // const decoded = jwt_decode(token);\n      // // Set current user\n      // dispatch(setCurrentUser(decoded));\n    })\n    .catch((err) => {\n      dispatch.loginStore.setErrors(err.response.data);\n    });\n};\n\nexport const registerUser = (userData, history) => (dispatch) => {\n  axios\n    .post('/api/users/register', userData)\n    .then((res) => history.push('/registerSuccess'))\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n"]},"metadata":{},"sourceType":"module"}