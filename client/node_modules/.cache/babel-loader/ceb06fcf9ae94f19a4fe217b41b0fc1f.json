{"ast":null,"code":"const model = {\n  state: [],\n  reducers: {\n    errors: (state, payload) => payload,\n    getErrors: (state, payload) => state.map(error => {\n      return error;\n    })\n  }\n};\nexport default model;","map":{"version":3,"sources":["/Users/arjay/Documents/pet-link/client/src/Components/Login/Models/Reducer.ts"],"names":["model","state","reducers","errors","payload","getErrors","map","error"],"mappings":"AAIA,MAAMA,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,EADK;AAEZC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CAACF,KAAD,EAAeG,OAAf,KAAsDA,OADtD;AAERC,IAAAA,SAAS,EAAE,CAACJ,KAAD,EAAeG,OAAf,KACTH,KAAK,CAACK,GAAN,CAAWC,KAAD,IAAW;AACnB,aAAOA,KAAP;AACD,KAFD;AAHM;AAFE,CAAd;AAWA,eAAeP,KAAf","sourcesContent":["import { LoginError } from './Types';\n\ntype State = ReadonlyArray<LoginError>;\n\nconst model = {\n  state: [] as State,\n  reducers: {\n    errors: (state: State, payload: ReadonlyArray<LoginError>) => payload,\n    getErrors: (state: State, payload: LoginError) =>\n      state.map((error) => {\n        return error;\n      }),\n  },\n};\n\nexport default model;\n"]},"metadata":{},"sourceType":"module"}