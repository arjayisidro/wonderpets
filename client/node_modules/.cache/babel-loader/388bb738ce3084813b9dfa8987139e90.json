{"ast":null,"code":"var _jsxFileName = \"/Users/arjay/Documents/pet-link/client/src/Components/Contents/Containers/ContentsContainer.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { isEmpty } from 'lodash';\nimport { CarouselContens } from '../Components/CarouselContents';\nimport { CategoryContents } from '../Components/CategoryContents';\nimport { CardContents } from '../Components/CardContents';\nimport { registerUser } from '../../../API/Login/loginAuth';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst ContentsContainers = ({\n  registrationErrors,\n  setRegistrationErrorsStore\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [registrationError, setRegistrationError] = useState({});\n  const history = useHistory();\n\n  const onSubmit = values => {\n    setIsLoading(true);\n    const userData = {\n      userName: values.userName,\n      emailAddress: values.emailAddress,\n      password: values.password\n    };\n    registerUser(userData, history);\n  };\n\n  useEffect(() => {\n    setRegistrationErrorsStore({\n      userName: '',\n      email: '',\n      password: ''\n    });\n  }, []);\n  useEffect(() => {\n    setRegistrationError(registrationErrors);\n    setIsLoading(isEmpty(registrationErrors));\n  }, [registrationErrors]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CarouselContens, {\n    onSubmit: ({\n      userName,\n      emailAddress,\n      password\n    }) => {\n      onSubmit({\n        userName,\n        emailAddress,\n        password\n      });\n    },\n    registrationErrorProps: registrationError,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CategoryContents, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContents, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapProps = state => {\n  return {\n    registrationErrors: state.loginStore.registrationErrors\n  };\n};\n\nconst mapDispatch = dispatch => ({\n  setRegistrationErrorsStore: dispatch.loginStore.setRegistrationErrors\n});\n\nexport default connect(mapProps, mapDispatch)(ContentsContainers);","map":{"version":3,"sources":["/Users/arjay/Documents/pet-link/client/src/Components/Contents/Containers/ContentsContainer.tsx"],"names":["React","useState","useEffect","isEmpty","CarouselContens","CategoryContents","CardContents","registerUser","connect","useHistory","ContentsContainers","registrationErrors","setRegistrationErrorsStore","isLoading","setIsLoading","registrationError","setRegistrationError","history","onSubmit","values","userData","userName","emailAddress","password","email","mapProps","state","loginStore","mapDispatch","dispatch","setRegistrationErrors"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;;AAYA,MAAMC,kBAAmC,GAAG,CAAC;AAC3CC,EAAAA,kBAD2C;AAE3CC,EAAAA;AAF2C,CAAD,KAGtC;AACJ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACc,iBAAD,EAAoBC,oBAApB,IAA4Cf,QAAQ,CAAS,EAAT,CAA1D;AACA,QAAMgB,OAAO,GAAGR,UAAU,EAA1B;;AACA,QAAMS,QAAQ,GAAIC,MAAD,IAAoB;AACnCL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMM,QAAQ,GAAG;AACfC,MAAAA,QAAQ,EAAEF,MAAM,CAACE,QADF;AAEfC,MAAAA,YAAY,EAAEH,MAAM,CAACG,YAFN;AAGfC,MAAAA,QAAQ,EAAEJ,MAAM,CAACI;AAHF,KAAjB;AAMAhB,IAAAA,YAAY,CAACa,QAAD,EAAWH,OAAX,CAAZ;AACD,GATD;;AAWAf,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,0BAA0B,CAAC;AAAES,MAAAA,QAAQ,EAAE,EAAZ;AAAgBG,MAAAA,KAAK,EAAE,EAAvB;AAA2BD,MAAAA,QAAQ,EAAE;AAArC,KAAD,CAA1B;AACD,GAFQ,EAEN,EAFM,CAAT;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,oBAAoB,CAACL,kBAAD,CAApB;AACAG,IAAAA,YAAY,CAACX,OAAO,CAACQ,kBAAD,CAAR,CAAZ;AACD,GAHQ,EAGN,CAACA,kBAAD,CAHM,CAAT;AAKA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AACE,IAAA,QAAQ,EAAE,CAAC;AAAEU,MAAAA,QAAF;AAAYC,MAAAA,YAAZ;AAA0BC,MAAAA;AAA1B,KAAD,KAA0C;AAClDL,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,QAAF;AAAYC,QAAAA,YAAZ;AAA0BC,QAAAA;AAA1B,OAAD,CAAR;AACD,KAHH;AAIE,IAAA,sBAAsB,EAAER,iBAJ1B;AAKE,IAAA,SAAS,EAAEF,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CAxCD;;AA0CA,MAAMY,QAAQ,GAAIC,KAAD,IAAuB;AACtC,SAAO;AACLf,IAAAA,kBAAkB,EAAEe,KAAK,CAACC,UAAN,CAAiBhB;AADhC,GAAP;AAGD,CAJD;;AAMA,MAAMiB,WAAW,GAAIC,QAAD,KAAyB;AAC3CjB,EAAAA,0BAA0B,EAAEiB,QAAQ,CAACF,UAAT,CAAoBG;AADL,CAAzB,CAApB;;AAIA,eAAetB,OAAO,CAACiB,QAAD,EAAWG,WAAX,CAAP,CAAsClB,kBAAtC,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { isEmpty } from 'lodash';\nimport { CarouselContens } from '../Components/CarouselContents';\nimport { CategoryContents } from '../Components/CategoryContents';\nimport { CardContents } from '../Components/CardContents';\nimport { registerUser } from '../../../API/Login/loginAuth';\nimport { connect } from 'react-redux';\nimport { IRootState, Dispatch } from '../../../Store/GlobalStore';\nimport { useHistory } from 'react-router-dom';\n\ninterface Values {\n  userName: string;\n  emailAddress: string;\n  password: string;\n}\n\ninterface Props {\n  registrationErrors?: any;\n  setRegistrationErrorsStore?: any;\n}\nconst ContentsContainers: React.FC<Props> = ({\n  registrationErrors,\n  setRegistrationErrorsStore,\n}) => {\n  const [isLoading, setIsLoading] = useState<Boolean>(false);\n  const [registrationError, setRegistrationError] = useState<Object>({});\n  const history = useHistory();\n  const onSubmit = (values: Values) => {\n    setIsLoading(true);\n    const userData = {\n      userName: values.userName,\n      emailAddress: values.emailAddress,\n      password: values.password,\n    };\n\n    registerUser(userData, history);\n  };\n\n  useEffect(() => {\n    setRegistrationErrorsStore({ userName: '', email: '', password: '' });\n  }, []);\n\n  useEffect(() => {\n    setRegistrationError(registrationErrors);\n    setIsLoading(isEmpty(registrationErrors));\n  }, [registrationErrors]);\n\n  return (\n    <React.Fragment>\n      <CarouselContens\n        onSubmit={({ userName, emailAddress, password }) => {\n          onSubmit({ userName, emailAddress, password });\n        }}\n        registrationErrorProps={registrationError}\n        isLoading={isLoading}\n      />\n      <CategoryContents />\n      <CardContents />\n    </React.Fragment>\n  );\n};\n\nconst mapProps = (state: IRootState) => {\n  return {\n    registrationErrors: state.loginStore.registrationErrors,\n  };\n};\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n  setRegistrationErrorsStore: dispatch.loginStore.setRegistrationErrors,\n});\n\nexport default connect(mapProps, mapDispatch as any)(ContentsContainers);\n"]},"metadata":{},"sourceType":"module"}