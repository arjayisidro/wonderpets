{"ast":null,"code":"var _jsxFileName = \"/Users/arjay/Documents/pet-link/client/src/Components/Contents/Components/CarouselContents.tsx\";\nimport React from 'react';\nimport styled from '@material-ui/styles/styled';\nimport { Form, Formik, Field } from 'formik';\nimport MuiGrid from '@material-ui/core/Grid';\nimport { Typography, Paper, Button, CircularProgress } from '@material-ui/core';\nimport { useIntl } from 'react-intl';\nimport { compose as composeStyles, palette, sizing, spacing } from '@material-ui/system';\nimport Styles from '../Styles';\nimport { MyTextField } from '../../Common/TextField';\nconst Grid = styled(MuiGrid)(composeStyles(spacing, palette, sizing));\nexport const CarouselContens = ({\n  onSubmit,\n  registrationErrorProps,\n  isLoading\n}) => {\n  const classes = Styles();\n  const intl = useIntl();\n  return /*#__PURE__*/React.createElement(Grid, {\n    px: 4,\n    container: true,\n    className: classes.carouselStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 7,\n    sm: 2,\n    py: 8,\n    px: 5,\n    className: classes.carouselLeftContentFontColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, intl.formatMessage({\n    id: 'pet_link'\n  })), /*#__PURE__*/React.createElement(Grid, {\n    pt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"p\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, intl.formatMessage({\n    id: 'welcome_to_petlink'\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    pt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"p\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, intl.formatMessage({\n    id: 'million_of_pet_owners'\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    sm: 12,\n    py: 8,\n    px: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.carouselPaddingTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      emailAddress: '',\n      userName: ''\n    },\n    onSubmit: values => {\n      onSubmit(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    pb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: MyTextField,\n    name: \"userName\",\n    label: intl.formatMessage({\n      id: 'username'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'username'\n    }),\n    size: \"small\",\n    error: registrationErrorProps.userName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    pb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: MyTextField,\n    name: \"emailAddress\",\n    label: intl.formatMessage({\n      id: 'email_address'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'email_address'\n    }),\n    size: \"small\",\n    error: registrationErrorProps.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    pb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: MyTextField,\n    name: \"password\",\n    label: intl.formatMessage({\n      id: 'password'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'password'\n    }),\n    type: \"password\",\n    error: registrationErrorProps.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    pt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, intl.formatMessage({\n    id: 'password_tips'\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    pb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    className: classes.registrationButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.carouselLeftContentFontColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }) : intl.formatMessage({\n    id: 'sign_up_for_pet_link'\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    pb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.registrationTermsStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, `${intl.formatMessage({\n    id: 'sign_up_terms'\n  })}\n                  ${intl.formatMessage({\n    id: 'terms_and_condtion'\n  })}.\n                  ${intl.formatMessage({\n    id: 'registration_terms'\n  })}`)))))));\n};","map":{"version":3,"sources":["/Users/arjay/Documents/pet-link/client/src/Components/Contents/Components/CarouselContents.tsx"],"names":["React","styled","Form","Formik","Field","MuiGrid","Typography","Paper","Button","CircularProgress","useIntl","compose","composeStyles","palette","sizing","spacing","Styles","MyTextField","Grid","CarouselContens","onSubmit","registrationErrorProps","isLoading","classes","intl","carouselStyles","carouselLeftContentFontColor","formatMessage","id","carouselPaddingTop","password","emailAddress","userName","values","email","registrationButton","registrationTermsStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from '@material-ui/styles/styled';\nimport { Form, Formik, Field } from 'formik';\nimport MuiGrid from '@material-ui/core/Grid';\nimport { Typography, Paper, Button, CircularProgress } from '@material-ui/core';\nimport { useIntl } from 'react-intl';\nimport {\n  compose as composeStyles,\n  palette,\n  sizing,\n  spacing,\n} from '@material-ui/system';\nimport Styles from '../Styles';\nimport { MyTextField } from '../../Common/TextField';\nconst Grid = styled(MuiGrid)(composeStyles(spacing, palette, sizing));\n\ninterface Values {\n  userName: string;\n  password: string;\n  emailAddress: string;\n}\n\ninterface Props {\n  onSubmit: (values: Values) => void;\n  registrationErrorProps?: any;\n  isLoading: Boolean;\n}\n\nexport const CarouselContens: React.FC<Props> = ({\n  onSubmit,\n  registrationErrorProps,\n  isLoading,\n}) => {\n  const classes = Styles();\n  const intl = useIntl();\n  return (\n    <Grid px={4} container className={classes.carouselStyles}>\n      <Grid\n        item\n        md={7}\n        sm={2}\n        py={8}\n        px={5}\n        className={classes.carouselLeftContentFontColor}\n      >\n        <Typography variant=\"h3\">\n          {intl.formatMessage({ id: 'pet_link' })}\n        </Typography>\n        <Grid pt={3}>\n          <Typography component=\"p\" variant=\"body1\">\n            {intl.formatMessage({ id: 'welcome_to_petlink' })}\n          </Typography>\n        </Grid>\n        <Grid pt={1}>\n          <Typography component=\"p\" variant=\"body1\">\n            {intl.formatMessage({ id: 'million_of_pet_owners' })}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid item md={4} sm={12} py={8} px={5}>\n        <Paper className={classes.carouselPaddingTop}>\n          <Formik\n            initialValues={{ password: '', emailAddress: '', userName: '' }}\n            onSubmit={(values) => {\n              onSubmit(values);\n            }}\n          >\n            <Form>\n              <Grid pb={2}>\n                <Field\n                  component={MyTextField}\n                  name=\"userName\"\n                  label={intl.formatMessage({ id: 'username' })}\n                  placeholder={intl.formatMessage({ id: 'username' })}\n                  size=\"small\"\n                  error={registrationErrorProps.userName}\n                />\n              </Grid>\n              <Grid pb={2}>\n                <Field\n                  component={MyTextField}\n                  name=\"emailAddress\"\n                  label={intl.formatMessage({ id: 'email_address' })}\n                  placeholder={intl.formatMessage({ id: 'email_address' })}\n                  size=\"small\"\n                  error={registrationErrorProps.email}\n                />\n              </Grid>\n              <Grid pb={3}>\n                <Field\n                  component={MyTextField}\n                  name=\"password\"\n                  label={intl.formatMessage({ id: 'password' })}\n                  placeholder={intl.formatMessage({ id: 'password' })}\n                  type=\"password\"\n                  error={registrationErrorProps.password}\n                />\n                <Grid pt={1}>\n                  <Typography variant=\"body2\">\n                    {intl.formatMessage({ id: 'password_tips' })}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid pb={3}>\n                <Button\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                  className={classes.registrationButton}\n                >\n                  {isLoading ? (\n                    <CircularProgress\n                      className={classes.carouselLeftContentFontColor}\n                    />\n                  ) : (\n                    intl.formatMessage({ id: 'sign_up_for_pet_link' })\n                  )}\n                </Button>\n              </Grid>\n              <Grid pb={3}>\n                <Typography\n                  variant=\"body2\"\n                  className={classes.registrationTermsStyle}\n                >\n                  {`${intl.formatMessage({\n                    id: 'sign_up_terms',\n                  })}\n                  ${intl.formatMessage({\n                    id: 'terms_and_condtion',\n                  })}.\n                  ${intl.formatMessage({\n                    id: 'registration_terms',\n                  })}`}\n                </Typography>\n              </Grid>\n            </Form>\n          </Formik>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}