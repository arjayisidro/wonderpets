{"ast":null,"code":"var _jsxFileName = \"/Users/arjay/Documents/pet-link/client/src/Components/Common/PrivateRoute.tsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => isAuthenticated === true ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}));\n\nconst mapProps = state => {\n  return {\n    isAuthenticated: state.loginStore.isAuthenticated\n  };\n};\n\nexport default connect(mapProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/arjay/Documents/pet-link/client/src/Components/Common/PrivateRoute.tsx"],"names":["React","Route","Redirect","connect","PrivateRoute","component","Component","isAuthenticated","rest","props","mapProps","state","loginStore"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAOA,MAAMC,YAA6B,GAAG,CAAC;AACrCC,EAAAA,SAAS,EAAEC,SAD0B;AAErCC,EAAAA,eAFqC;AAGrC,KAAGC;AAHkC,CAAD,kBAKpC,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAGC,KAAD,IACNF,eAAe,KAAK,IAApB,gBACE,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,gBAGE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GALF;;AAiBA,MAAMC,QAAQ,GAAIC,KAAD,IAAuB;AACtC,SAAO;AACLJ,IAAAA,eAAe,EAAEI,KAAK,CAACC,UAAN,CAAiBL;AAD7B,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACO,QAAD,CAAP,CAAkBN,YAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { IRootState, Dispatch } from '../../Store/GlobalStore';\nimport { connect } from 'react-redux';\n\ninterface Props {\n  component: any;\n  isAuthenticated: Object;\n}\n\nconst PrivateRoute: React.FC<Props> = ({\n  component: Component,\n  isAuthenticated,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nconst mapProps = (state: IRootState) => {\n  return {\n    isAuthenticated: state.loginStore.isAuthenticated,\n  };\n};\n\nexport default connect(mapProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}