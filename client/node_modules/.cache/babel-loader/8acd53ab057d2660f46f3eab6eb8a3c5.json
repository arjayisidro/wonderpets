{"ast":null,"code":"var _jsxFileName = \"/Users/arjay/Documents/pet-link/client/src/Components/Contents/Components/CarouselContents.tsx\";\nimport React from 'react';\nimport styled from '@material-ui/styles/styled';\nimport { Form, Formik, Field } from 'formik';\nimport MuiGrid from '@material-ui/core/Grid';\nimport { Typography, Paper, Button } from '@material-ui/core';\nimport { useIntl } from 'react-intl';\nimport { compose as composeStyles, palette, sizing, spacing } from '@material-ui/system';\nimport Styles from '../Styles';\nimport { MyTextField } from '../../Common/TextField';\nconst Grid = styled(MuiGrid)(composeStyles(spacing, palette, sizing));\nexport const CarouselContens = ({\n  onSubmit\n}) => {\n  const classes = Styles();\n  const intl = useIntl();\n  return /*#__PURE__*/React.createElement(Grid, {\n    px: 4,\n    container: true,\n    className: classes.carouselStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 7,\n    py: 8,\n    px: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, intl.formatMessage({\n    id: 'pet_link'\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    py: 8,\n    px: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.carouselPaddingTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      emailAddress: '',\n      userName: ''\n    },\n    onSubmit: values => {\n      onSubmit(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    pb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: MyTextField,\n    name: \"username\",\n    label: intl.formatMessage({\n      id: 'username'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'username'\n    }),\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    pb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: MyTextField,\n    name: \"emailAddress\",\n    label: intl.formatMessage({\n      id: 'email_address'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'email_address'\n    }),\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    pb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: MyTextField,\n    name: \"password\",\n    label: intl.formatMessage({\n      id: 'password'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'password'\n    }),\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    pt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, intl.formatMessage({\n    id: 'password_tips'\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    pb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    className: classes.registrationButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, intl.formatMessage({\n    id: 'sign_up_for_pet_link'\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    pb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.registrationTermsStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, `${intl.formatMessage({\n    id: 'sign_up_terms'\n  })}\n                  ${intl.formatMessage({\n    id: 'terms_and_condtion'\n  })}.\n                  ${intl.formatMessage({\n    id: 'registration_terms'\n  })}`)))))));\n};","map":{"version":3,"sources":["/Users/arjay/Documents/pet-link/client/src/Components/Contents/Components/CarouselContents.tsx"],"names":["React","styled","Form","Formik","Field","MuiGrid","Typography","Paper","Button","useIntl","compose","composeStyles","palette","sizing","spacing","Styles","MyTextField","Grid","CarouselContens","onSubmit","classes","intl","carouselStyles","formatMessage","id","carouselPaddingTop","password","emailAddress","userName","values","registrationButton","registrationTermsStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from '@material-ui/styles/styled';\nimport { Form, Formik, Field } from 'formik';\nimport MuiGrid from '@material-ui/core/Grid';\nimport { Typography, Paper, Button } from '@material-ui/core';\nimport { useIntl } from 'react-intl';\nimport {\n  compose as composeStyles,\n  palette,\n  sizing,\n  spacing,\n} from '@material-ui/system';\nimport Styles from '../Styles';\nimport { MyTextField } from '../../Common/TextField';\nconst Grid = styled(MuiGrid)(composeStyles(spacing, palette, sizing));\n\ninterface Values {\n  userName: string;\n  password: string;\n  emailAddress: string;\n}\n\ninterface Props {\n  onSubmit: (values: Values) => void;\n  registrationErrorProps?: any;\n}\n\nexport const CarouselContens: React.FC<Props> = ({ onSubmit }) => {\n  const classes = Styles();\n  const intl = useIntl();\n  return (\n    <Grid px={4} container className={classes.carouselStyles}>\n      <Grid item md={7} py={8} px={5}>\n        <Typography variant=\"h3\">\n          {intl.formatMessage({ id: 'pet_link' })}\n        </Typography>\n      </Grid>\n      <Grid item md={4} py={8} px={5}>\n        <Paper className={classes.carouselPaddingTop}>\n          <Formik\n            initialValues={{ password: '', emailAddress: '', userName: '' }}\n            onSubmit={(values) => {\n              onSubmit(values);\n            }}\n          >\n            <Form>\n              <Grid pb={2}>\n                <Field\n                  component={MyTextField}\n                  name=\"username\"\n                  label={intl.formatMessage({ id: 'username' })}\n                  placeholder={intl.formatMessage({ id: 'username' })}\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid pb={2}>\n                <Field\n                  component={MyTextField}\n                  name=\"emailAddress\"\n                  label={intl.formatMessage({ id: 'email_address' })}\n                  placeholder={intl.formatMessage({ id: 'email_address' })}\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid pb={3}>\n                <Field\n                  component={MyTextField}\n                  name=\"password\"\n                  label={intl.formatMessage({ id: 'password' })}\n                  placeholder={intl.formatMessage({ id: 'password' })}\n                  type=\"password\"\n                />\n                <Grid pt={1}>\n                  <Typography variant=\"body2\">\n                    {intl.formatMessage({ id: 'password_tips' })}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid pb={3}>\n                <Button\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                  className={classes.registrationButton}\n                >\n                  {intl.formatMessage({ id: 'sign_up_for_pet_link' })}\n                </Button>\n              </Grid>\n              <Grid pb={3}>\n                <Typography\n                  variant=\"body2\"\n                  className={classes.registrationTermsStyle}\n                >\n                  {`${intl.formatMessage({\n                    id: 'sign_up_terms',\n                  })}\n                  ${intl.formatMessage({\n                    id: 'terms_and_condtion',\n                  })}.\n                  ${intl.formatMessage({\n                    id: 'registration_terms',\n                  })}`}\n                </Typography>\n              </Grid>\n            </Form>\n          </Formik>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}