{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from '../../Utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { dispatch } from '../../Store/GlobalStore';\nexport const loginUser = userData => {\n  axios.post('/api/users/sign-in', userData).then(res => {\n    const {\n      token\n    } = res.data;\n    localStorage.setItem('jwtToken', token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token); // // Set current user\n\n    dispatch.loginStore.setCurrentUser(decoded);\n  }).catch(err => {\n    dispatch.loginStore.setErrors(err.response.data);\n  });\n};\nexport const registerUser = (userData, history) => {\n  axios.post('/api/users/register', userData).then(() => {\n    history.push('/registration-success');\n  }).catch(err => {\n    dispatch.loginStore.setRegistrationErrors(err.response.data);\n  });\n};","map":{"version":3,"sources":["/Users/arjay/Documents/pet-link/client/src/API/Login/loginAuth.ts"],"names":["axios","setAuthToken","jwt_decode","dispatch","loginUser","userData","post","then","res","token","data","localStorage","setItem","decoded","loginStore","setCurrentUser","catch","err","setErrors","response","registerUser","history","push","setRegistrationErrors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAaA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAA2B;AAClDL,EAAAA,KAAK,CACFM,IADH,CACQ,oBADR,EAC8BD,QAD9B,EAEGE,IAFH,CAESC,GAAD,IAAS;AACb,UAAM;AAAEC,MAAAA;AAAF,QAAYD,GAAG,CAACE,IAAtB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC;AACAR,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACA,UAAMI,OAAO,GAAGX,UAAU,CAACO,KAAD,CAA1B,CAJa,CAKb;;AACAN,IAAAA,QAAQ,CAACW,UAAT,CAAoBC,cAApB,CAAmCF,OAAnC;AACD,GATH,EAUGG,KAVH,CAUUC,GAAD,IAAS;AACdd,IAAAA,QAAQ,CAACW,UAAT,CAAoBI,SAApB,CAA8BD,GAAG,CAACE,QAAJ,CAAaT,IAA3C;AACD,GAZH;AAaD,CAdM;AAgBP,OAAO,MAAMU,YAAY,GAAG,CAACf,QAAD,EAAyBgB,OAAzB,KAA0C;AACpErB,EAAAA,KAAK,CACFM,IADH,CACQ,qBADR,EAC+BD,QAD/B,EAEGE,IAFH,CAEQ,MAAM;AACVc,IAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb;AACD,GAJH,EAKGN,KALH,CAKUC,GAAD,IAAS;AACdd,IAAAA,QAAQ,CAACW,UAAT,CAAoBS,qBAApB,CAA0CN,GAAG,CAACE,QAAJ,CAAaT,IAAvD;AACD,GAPH;AAQD,CATM","sourcesContent":["import axios from 'axios';\nimport setAuthToken from '../../Utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { dispatch } from '../../Store/GlobalStore';\n\ninterface Credentials {\n  emailAddress: string;\n  password: string;\n}\n\ninterface Registration {\n  userName: string;\n  emailAddress: string;\n  password: string;\n}\n\nexport const loginUser = (userData: Credentials) => {\n  axios\n    .post('/api/users/sign-in', userData)\n    .then((res) => {\n      const { token } = res.data;\n      localStorage.setItem('jwtToken', token);\n      setAuthToken(token);\n      const decoded = jwt_decode(token);\n      // // Set current user\n      dispatch.loginStore.setCurrentUser(decoded);\n    })\n    .catch((err) => {\n      dispatch.loginStore.setErrors(err.response.data);\n    });\n};\n\nexport const registerUser = (userData: Registration, history: any) => {\n  axios\n    .post('/api/users/register', userData)\n    .then(() => {\n      history.push('/registration-success');\n    })\n    .catch((err) => {\n      dispatch.loginStore.setRegistrationErrors(err.response.data);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}