{"ast":null,"code":"var _jsxFileName = \"/Users/arjay/Documents/pet-link/src/Components/Contents/index.tsx\";\nimport React, { useState } from 'react';\nimport { Form, Formik, Field } from 'formik';\nimport MuiGrid from '@material-ui/core/Grid';\nimport { Paper } from '@material-ui/core';\nimport Styles from './Styles';\nimport { CARD_ITEMS, CATEGORY_ITEMS, CATEGORY_ITEMS_TWO, CATEGORY_ITEMS_THREE } from './Constants';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport styled from '@material-ui/styles/styled';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { useIntl } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport { compose as composeStyles, palette, sizing, spacing } from '@material-ui/system';\nimport { MyTextField } from '../Common/TextField';\nconst Grid = styled(MuiGrid)(composeStyles(spacing, palette, sizing));\n\nfunction Contents(props) {\n  const classes = Styles();\n  const [value, setValue] = useState(0);\n  const intl = useIntl();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function TabPanel(props) {\n    const {\n      children,\n      value,\n      index,\n      ...other\n    } = props;\n    return /*#__PURE__*/React.createElement(Grid, Object.assign({\n      hidden: value !== index,\n      id: `simple-tabpanel-${index}`\n    }, other, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }), value === index && /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, children));\n  }\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`\n    };\n  }\n\n  const onSubmit = values => {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    px: 4,\n    container: true,\n    className: classes.carouselStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 7,\n    py: 8,\n    px: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Some content over here\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    py: 8,\n    px: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      emailAddress: '',\n      userName: ''\n    },\n    onSubmit: values => {\n      onSubmit(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    handleChange,\n    handleBlur\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    pb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: MyTextField,\n    name: \"username\",\n    label: intl.formatMessage({\n      id: 'username'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'username'\n    }),\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    pb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: MyTextField,\n    name: \"emailAddress\",\n    label: intl.formatMessage({\n      id: 'email_address'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'email_address'\n    }),\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    pb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: MyTextField,\n    name: \"password\",\n    label: intl.formatMessage({\n      id: 'password'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'password'\n    }),\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    pb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    className: classes.registrationButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'sign_up_for_pet_link'\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    pb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'sign_up_terms'\n  }), intl.formatMessage({\n    id: 'terms_and_condtion'\n  }), intl.formatMessage({\n    id: 'registration_terms'\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }))))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    px: 5,\n    py: 3,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, CARD_ITEMS.map(item => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.paperImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    alt: \"Contemplative Reptile\",\n    height: \"140\",\n    image: item.imgSrc,\n    title: \"Contemplative Reptile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, intl.formatMessage({\n    id: item.title\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, intl.formatMessage({\n    id: item.description\n  }))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, intl.formatMessage({\n    id: 'find_out_more'\n  }))))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    px: 5,\n    py: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, intl.formatMessage({\n    id: 'shop_by_category'\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    py: 3,\n    justify: \"center\",\n    className: classes.categoryClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"simple tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"Accessories\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"Foods\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"Vitamins\"\n  }, a11yProps(2), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    px: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, CATEGORY_ITEMS.map(item => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    height: \"140\",\n    image: item.imgSrc,\n    title: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, item.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, item.description)), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardActionStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'view'\n  })), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'add_to_cart'\n  })))))))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    px: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, CATEGORY_ITEMS_TWO.map(item => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    height: \"140\",\n    image: item.imgSrc,\n    title: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, item.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, item.description)), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardActionStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'view'\n  })), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'add_to_cart'\n  })))))))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    px: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, CATEGORY_ITEMS_THREE.map(item => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    height: \"140\",\n    image: item.imgSrc,\n    title: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, item.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, item.description)), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardActionStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'view'\n  })), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }, intl.formatMessage({\n    id: 'add_to_cart'\n  }))))))))));\n}\n\nexport default Contents;","map":{"version":3,"sources":["/Users/arjay/Documents/pet-link/src/Components/Contents/index.tsx"],"names":["React","useState","Form","Formik","Field","MuiGrid","Paper","Styles","CARD_ITEMS","CATEGORY_ITEMS","CATEGORY_ITEMS_TWO","CATEGORY_ITEMS_THREE","Card","CardActions","CardContent","CardMedia","Button","Typography","styled","Tabs","Tab","useIntl","Box","compose","composeStyles","palette","sizing","spacing","MyTextField","Grid","Contents","props","classes","value","setValue","intl","handleChange","event","newValue","TabPanel","children","index","other","a11yProps","id","onSubmit","values","carouselStyles","padding","password","emailAddress","userName","handleBlur","formatMessage","registrationButton","map","item","paperImg","imgSrc","title","description","categoryClass","cardActionStyles"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Formik, Field } from 'formik';\nimport MuiGrid from '@material-ui/core/Grid';\nimport { Paper } from '@material-ui/core';\nimport Styles from './Styles';\nimport {\n  CARD_ITEMS,\n  CATEGORY_ITEMS,\n  CATEGORY_ITEMS_TWO,\n  CATEGORY_ITEMS_THREE,\n} from './Constants';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport styled from '@material-ui/styles/styled';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { useIntl } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport {\n  compose as composeStyles,\n  palette,\n  sizing,\n  spacing,\n} from '@material-ui/system';\nimport { MyTextField } from '../Common/TextField';\nconst Grid = styled(MuiGrid)(composeStyles(spacing, palette, sizing));\n\ninterface Values {\n  userName: string;\n  password: string;\n  emailAddress: string;\n}\n\ninterface Props {\n  onSubmit: (values: Values) => void;\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction Contents(props: Props) {\n  const classes = Styles();\n  const [value, setValue] = useState(0);\n  const intl = useIntl();\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  function TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <Grid hidden={value !== index} id={`simple-tabpanel-${index}`} {...other}>\n        {value === index && <Box>{children}</Box>}\n      </Grid>\n    );\n  }\n  function a11yProps(index: any) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const onSubmit = (values: object) => {};\n\n  return (\n    <React.Fragment>\n      <Grid px={4} container className={classes.carouselStyles}>\n        <Grid item md={7} py={8} px={5}>\n          <Typography variant=\"body1\">Some content over here</Typography>\n        </Grid>\n        <Grid item md={4} py={8} px={5}>\n          <Paper style={{ padding: '16px' }}>\n            <Formik\n              initialValues={{ password: '', emailAddress: '', userName: '' }}\n              onSubmit={(values) => {\n                onSubmit(values);\n              }}\n            >\n              {({ values, handleChange, handleBlur }) => (\n                <Form>\n                  <Grid pb={2}>\n                    <Field\n                      component={MyTextField}\n                      name=\"username\"\n                      label={intl.formatMessage({ id: 'username' })}\n                      placeholder={intl.formatMessage({ id: 'username' })}\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid pb={2}>\n                    <Field\n                      component={MyTextField}\n                      name=\"emailAddress\"\n                      label={intl.formatMessage({ id: 'email_address' })}\n                      placeholder={intl.formatMessage({ id: 'email_address' })}\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid pb={3}>\n                    <Field\n                      component={MyTextField}\n                      name=\"password\"\n                      label={intl.formatMessage({ id: 'password' })}\n                      placeholder={intl.formatMessage({ id: 'password' })}\n                      type=\"password\"\n                    />\n                  </Grid>\n                  <Grid pb={3}>\n                    <Button\n                      fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                      className={classes.registrationButton}\n                    >\n                      {intl.formatMessage({ id: 'sign_up_for_pet_link' })}\n                    </Button>\n                  </Grid>\n                  <Grid pb={3}>\n                    <Typography variant=\"body2\">\n                      {intl.formatMessage({\n                        id: 'sign_up_terms',\n                      })}\n                      {intl.formatMessage({\n                        id: 'terms_and_condtion',\n                      })}\n                      {intl.formatMessage({\n                        id: 'registration_terms',\n                      })}\n                    </Typography>\n                    <Typography variant=\"body2\"></Typography>\n                  </Grid>\n                </Form>\n              )}\n            </Formik>\n          </Paper>\n        </Grid>\n      </Grid>\n\n      <Grid container px={5} py={3} spacing={4}>\n        {CARD_ITEMS.map((item) => (\n          <Grid item md={4}>\n            <Card className={classes.paperImg}>\n              <CardMedia\n                component=\"img\"\n                alt=\"Contemplative Reptile\"\n                height=\"140\"\n                image={item.imgSrc}\n                title=\"Contemplative Reptile\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {intl.formatMessage({ id: item.title })}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {intl.formatMessage({ id: item.description })}\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\">\n                  {intl.formatMessage({ id: 'find_out_more' })}\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n      <Grid container px={5} py={3}>\n        <Grid item md={12}>\n          <Typography variant=\"h6\" align=\"center\">\n            {intl.formatMessage({ id: 'shop_by_category' })}\n          </Typography>\n          <Grid\n            item\n            md={12}\n            py={3}\n            justify=\"center\"\n            className={classes.categoryClass}\n          >\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"simple tabs example\"\n            >\n              <Tab label=\"Accessories\" {...a11yProps(0)} />\n              <Tab label=\"Foods\" {...a11yProps(1)} />\n              <Tab label=\"Vitamins\" {...a11yProps(2)} />\n            </Tabs>\n          </Grid>\n        </Grid>\n        <TabPanel value={value} index={0}>\n          <Grid container spacing={3} px={5}>\n            {CATEGORY_ITEMS.map((item) => (\n              <Grid item md={3}>\n                <Card>\n                  <CardMedia\n                    component=\"img\"\n                    height=\"140\"\n                    image={item.imgSrc}\n                    title={item.title}\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {item.title}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      {item.description}\n                    </Typography>\n                  </CardContent>\n                  <CardActions className={classes.cardActionStyles}>\n                    <Button size=\"large\">\n                      {intl.formatMessage({ id: 'view' })}\n                    </Button>\n                    <Button size=\"large\">\n                      {intl.formatMessage({ id: 'add_to_cart' })}\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <Grid container spacing={3} px={5}>\n            {CATEGORY_ITEMS_TWO.map((item) => (\n              <Grid item md={3}>\n                <Card>\n                  <CardMedia\n                    component=\"img\"\n                    height=\"140\"\n                    image={item.imgSrc}\n                    title={item.title}\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {item.title}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      {item.description}\n                    </Typography>\n                  </CardContent>\n                  <CardActions className={classes.cardActionStyles}>\n                    <Button size=\"large\">\n                      {intl.formatMessage({ id: 'view' })}\n                    </Button>\n                    <Button size=\"large\">\n                      {intl.formatMessage({ id: 'add_to_cart' })}\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <Grid container spacing={3} px={5}>\n            {CATEGORY_ITEMS_THREE.map((item) => (\n              <Grid item md={3}>\n                <Card>\n                  <CardMedia\n                    component=\"img\"\n                    height=\"140\"\n                    image={item.imgSrc}\n                    title={item.title}\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {item.title}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      {item.description}\n                    </Typography>\n                  </CardContent>\n                  <CardActions className={classes.cardActionStyles}>\n                    <Button size=\"large\">\n                      {intl.formatMessage({ id: 'view' })}\n                    </Button>\n                    <Button size=\"large\">\n                      {intl.formatMessage({ id: 'add_to_cart' })}\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </TabPanel>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Contents;\n"]},"metadata":{},"sourceType":"module"}