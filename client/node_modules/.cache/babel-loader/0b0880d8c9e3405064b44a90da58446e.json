{"ast":null,"code":"import axios from 'axios';\nexport const loginUser = userData => dispatch => {\n  axios.post('/api/users/login', userData).then(res => {\n    // Save to localstorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem('jwtToken', token); // Set token to auth header\n\n    setAuthToken(token); // Decode token to get userData\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};","map":{"version":3,"sources":["/Users/arjay/Documents/pet-link/client/src/API/Login/loginAuth.ts"],"names":["axios","loginUser","userData","dispatch","post","then","res","token","data","localStorage","setItem","setAuthToken","decoded","jwt_decode","setCurrentUser","catch","err","type","GET_ERRORS","payload","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAuBC,QAAD,IAAwB;AACrEH,EAAAA,KAAK,CACFI,IADH,CACQ,kBADR,EAC4BF,QAD5B,EAEGG,IAFH,CAESC,GAAD,IAAS;AACb;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAYD,GAAG,CAACE,IAAtB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC,EAHa,CAIb;;AACAI,IAAAA,YAAY,CAACJ,KAAD,CAAZ,CALa,CAMb;;AACA,UAAMK,OAAO,GAAGC,UAAU,CAACN,KAAD,CAA1B,CAPa,CAQb;;AACAJ,IAAAA,QAAQ,CAACW,cAAc,CAACF,OAAD,CAAf,CAAR;AACD,GAZH,EAaGG,KAbH,CAaUC,GAAD,IACLb,QAAQ,CAAC;AACPc,IAAAA,IAAI,EAAEC,UADC;AAEPC,IAAAA,OAAO,EAAEH,GAAG,CAACI,QAAJ,CAAaZ;AAFf,GAAD,CAdZ;AAmBD,CApBM","sourcesContent":["import axios from 'axios';\nimport { Dispatch } from 'redux';\n\nexport const loginUser = (userData: Object) => (dispatch: Dispatch) => {\n  axios\n    .post('/api/users/login', userData)\n    .then((res) => {\n      // Save to localstorage\n      const { token } = res.data;\n      localStorage.setItem('jwtToken', token);\n      // Set token to auth header\n      setAuthToken(token);\n      // Decode token to get userData\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n"]},"metadata":{},"sourceType":"module"}