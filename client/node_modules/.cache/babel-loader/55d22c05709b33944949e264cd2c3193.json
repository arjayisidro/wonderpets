{"ast":null,"code":"import { createModel } from '@rematch/core';\nimport { isEmpty } from 'lodash';\nconst initialState = {\n  errors: {\n    email: '',\n    password: ''\n  },\n  registrationErrors: {\n    userName: '',\n    email: '',\n    password: ''\n  },\n  isAuthenticated: false,\n  user: {}\n};\nexport const loginStore = createModel({\n  state: initialState,\n  reducers: {\n    user: state => state,\n    setCurrentUser: (state, payload) => ({ ...state,\n      user: payload,\n      isAuthenticated: !isEmpty(payload)\n    }),\n    getCurrentProfile: (state, payload) => ({ ...state,\n      profile: payload\n    }),\n    errors: state => state,\n    registrationErrors: state => state,\n    setErrors: (state, payload) => ({ ...state,\n      errors: payload\n    }),\n    setRegistrationErrors: (state, payload) => ({ ...state,\n      registrationErrors: payload\n    })\n  }\n});","map":{"version":3,"sources":["/Users/arjay/Documents/pet-link/client/src/Components/Login/Models/Index.ts"],"names":["createModel","isEmpty","initialState","errors","email","password","registrationErrors","userName","isAuthenticated","user","loginStore","state","reducers","setCurrentUser","payload","getCurrentProfile","profile","setErrors","setRegistrationErrors"],"mappings":"AAMA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAASC,OAAT,QAAwB,QAAxB;AAmBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GADW;AAKnBC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,QAAQ,EAAE,EADQ;AAElBH,IAAAA,KAAK,EAAE,EAFW;AAGlBC,IAAAA,QAAQ,EAAE;AAHQ,GALD;AAUnBG,EAAAA,eAAe,EAAE,KAVE;AAWnBC,EAAAA,IAAI,EAAE;AAXa,CAArB;AAcA,OAAO,MAAMC,UAAU,GAAGV,WAAW,CAAC;AACpCW,EAAAA,KAAK,EAAET,YAD6B;AAEpCU,EAAAA,QAAQ,EAAE;AACRH,IAAAA,IAAI,EAAGE,KAAD,IAAgCA,KAD9B;AAERE,IAAAA,cAAc,EAAE,CAACF,KAAD,EAA6BG,OAA7B,MAAwD,EACtE,GAAGH,KADmE;AAEtEF,MAAAA,IAAI,EAAEK,OAFgE;AAGtEN,MAAAA,eAAe,EAAE,CAACP,OAAO,CAACa,OAAD;AAH6C,KAAxD,CAFR;AAORC,IAAAA,iBAAiB,EAAE,CAACJ,KAAD,EAA0BG,OAA1B,MAAgD,EACjE,GAAGH,KAD8D;AAEjEK,MAAAA,OAAO,EAAEF;AAFwD,KAAhD,CAPX;AAWRX,IAAAA,MAAM,EAAGQ,KAAD,IAAkBA,KAXlB;AAYRL,IAAAA,kBAAkB,EAAGK,KAAD,IAA8BA,KAZ1C;AAaRM,IAAAA,SAAS,EAAE,CAACN,KAAD,EAAeG,OAAf,MAAoC,EAC7C,GAAGH,KAD0C;AAE7CR,MAAAA,MAAM,EAAEW;AAFqC,KAApC,CAbH;AAiBRI,IAAAA,qBAAqB,EAAE,CACrBP,KADqB,EAErBG,OAFqB,MAGjB,EACJ,GAAGH,KADC;AAEJL,MAAAA,kBAAkB,EAAEQ;AAFhB,KAHiB;AAjBf;AAF0B,CAAD,CAA9B","sourcesContent":["import {\n  Errors,\n  RegistrationErrors,\n  LoginSuccess,\n  Profile,\n} from '../Types/LoginTypes';\nimport { createModel } from '@rematch/core';\nimport { isEmpty } from 'lodash';\n\ninterface State {\n  errors: Errors;\n  registrationErrors: RegistrationErrors;\n}\n\ninterface RegistrationState {\n  registrationErrors: RegistrationErrors;\n}\n\ninterface LoginAuthentication {\n  user: string;\n}\n\ninterface UserProfileState {\n  profile: object;\n}\n\nconst initialState = {\n  errors: {\n    email: '',\n    password: '',\n  },\n  registrationErrors: {\n    userName: '',\n    email: '',\n    password: '',\n  },\n  isAuthenticated: false,\n  user: {},\n};\n\nexport const loginStore = createModel({\n  state: initialState,\n  reducers: {\n    user: (state: LoginAuthentication) => state,\n    setCurrentUser: (state: LoginAuthentication, payload: LoginSuccess) => ({\n      ...state,\n      user: payload,\n      isAuthenticated: !isEmpty(payload),\n    }),\n    getCurrentProfile: (state: UserProfileState, payload: Profile) => ({\n      ...state,\n      profile: payload,\n    }),\n    errors: (state: State) => state,\n    registrationErrors: (state: RegistrationState) => state,\n    setErrors: (state: State, payload: Errors) => ({\n      ...state,\n      errors: payload,\n    }),\n    setRegistrationErrors: (\n      state: RegistrationState,\n      payload: RegistrationErrors\n    ) => ({\n      ...state,\n      registrationErrors: payload,\n    }),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}